kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: local-storage-redis
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-redis-pv
spec:
  capacity:
    storage: 0.2Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage-redis
  local:
     path: /mnt/disks/redis
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - node1
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: local-redis-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 0.2Gi
  storageClassName: local-storage-redis
---
apiVersion: v1
data:
  redis.conf: |
        bind 0.0.0.0
        port 6379
        pidfile .pid
        appendonly yes
        cluster-config-file nodes-6379.conf
        pidfile /data/middleware-data/redis/log/redis-6379.pid
        cluster-config-file /data/middleware-data/redis/conf/redis.conf
        dir /data/middleware-data/redis/data/
        logfile "/data/middleware-data/redis/log/redis-6379.log"
        cluster-node-timeout 5000
        protected-mode no
kind: ConfigMap
metadata:
  name: redis-conf
  namespace: default
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  serviceName: redis
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      initContainers:
      - name: init-redis
        image: busybox
        command: ['sh', '-c', 'mkdir -p /data/middleware-data/redis/log/;mkdir -p /data/middleware-data/redis/conf/;mkdir -p /data/middleware-data/redis/data/']
        volumeMounts:
        - name: redis-data
          mountPath: /data/middleware-data/redis/
#          subPath: "redis"
      containers:
      - name: redis
        image: redis:5.0.6
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - "exec redis-server /data/middleware-data/redis/conf/redis.conf"
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        volumeMounts:
        - name: redis-config
          mountPath: /data/middleware-data/redis/conf/
        - name: redis-data
          mountPath: /data/middleware-data/redis/
#          subPath: "redis"
      volumes:
      - name: redis-config
        configMap:
          name: redis-conf
      - name: redis-data
        persistentVolumeClaim:
          claimName: local-redis-claim
---
apiVersion: v1
kind: Service
metadata:
  name: redis-svc
  namespace: default
  labels: 
    app: redis
spec:
  clusterIP: None
  ports:
  - port: 6379
    name: redis
  selector:
    app: redis
